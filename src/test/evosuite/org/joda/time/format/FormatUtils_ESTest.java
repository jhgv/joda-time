/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 25 13:25:24 GMT 2018
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedWriter;
import java.io.ByteArrayOutputStream;
import java.io.CharArrayWriter;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FilterOutputStream;
import java.io.OutputStreamWriter;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PipedWriter;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.Writer;
import java.net.URI;
import java.net.URISyntaxException;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.joda.time.format.FormatUtils;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FormatUtils_ESTest extends FormatUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        FormatUtils.appendPaddedInteger((Appendable) null, 2146626369, 402);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("a");
      BufferedWriter bufferedWriter0 = new BufferedWriter(mockPrintWriter0);
      Writer writer0 = bufferedWriter0.append(']');
      FormatUtils.writePaddedInteger(writer0, Integer.MIN_VALUE, Integer.MIN_VALUE);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FormatUtils.calculateDigitCount((-2450));
      StringBuffer stringBuffer0 = new StringBuffer("org.apache.oro.io.Perl5FilenameFilter");
      stringBuffer0.chars();
      StringBuffer stringBuffer1 = stringBuffer0.reverse();
      FormatUtils.appendPaddedInteger(stringBuffer0, (-2450), 1525);
      FormatUtils.appendUnpaddedInteger((Appendable) stringBuffer0, (long) 1525);
      FormatUtils.calculateDigitCount(100L);
      FormatUtils.appendPaddedInteger((Appendable) stringBuffer1, 3, 1525);
      assertEquals(3092, stringBuffer1.length());
      assertEquals(3092, stringBuffer0.length());
      
      StringWriter stringWriter0 = new StringWriter(5);
      StringWriter stringWriter1 = stringWriter0.append('-');
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) stringBuffer0);
      // Undeclared exception!
      FormatUtils.writePaddedInteger((Writer) stringWriter2, 1525, 2125791893);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "8NMK^OfMu#>C)2");
      PipedInputStream pipedInputStream0 = new PipedInputStream(18);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      Charset charset0 = Charset.defaultCharset();
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(pipedOutputStream0, charset0);
      outputStreamWriter0.append('V');
      FormatUtils.writeUnpaddedInteger((Writer) outputStreamWriter0, (long) 18);
      FormatUtils.appendUnpaddedInteger((Appendable) outputStreamWriter0, (long) 18);
      FormatUtils.appendPaddedInteger((Appendable) outputStreamWriter0, (long) 18, 1487);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("M6t:Z''Au -0&aSY");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[1] = (Object) mockPrintWriter0;
      objectArray0[2] = (Object) "/";
      PrintWriter printWriter0 = mockPrintWriter1.printf("/", objectArray0);
      FormatUtils.writeUnpaddedInteger((Writer) printWriter0, 18);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FormatUtils.calculateDigitCount((-2450));
      StringBuffer stringBuffer0 = new StringBuffer("org.apache.oro.io.Perl5FilenameFilter");
      FormatUtils.appendPaddedInteger(stringBuffer0, (-2450), 1525);
      FormatUtils.appendUnpaddedInteger((Appendable) stringBuffer0, (-2450));
      FormatUtils.appendPaddedInteger((Appendable) stringBuffer0, 1647, 1525);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("");
      StringBuffer stringBuffer1 = stringBuffer0.append(true);
      StringBuffer stringBuffer2 = stringBuffer1.appendCodePoint(0);
      StringBuffer stringBuffer3 = stringBuffer2.append(2);
      StringBuffer stringBuffer4 = stringBuffer3.reverse();
      FormatUtils.appendPaddedInteger(stringBuffer4, 2380L, 0);
      FormatUtils.appendPaddedInteger((Appendable) stringBuffer1, 20, 20);
      FormatUtils.appendUnpaddedInteger((Appendable) stringBuffer2, 32);
      FormatUtils.calculateDigitCount(1000L);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "8NMK^OfMu#>C)2");
      PipedInputStream pipedInputStream0 = new PipedInputStream(39);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      Charset charset0 = Charset.defaultCharset();
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(pipedOutputStream0, charset0);
      outputStreamWriter0.append('V');
      FormatUtils.writeUnpaddedInteger((Writer) outputStreamWriter0, (long) 39);
      outputStreamWriter0.write("8NMK^OfMu#>C)2");
      FormatUtils.appendUnpaddedInteger((Appendable) outputStreamWriter0, (long) 39);
      FormatUtils.appendPaddedInteger((Appendable) outputStreamWriter0, (long) 39, 1487);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(outputStreamWriter0, false);
      FormatUtils.writeUnpaddedInteger((Writer) mockPrintWriter0, 10L);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = (-678);
      String string0 = ".,mp";
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      CharArrayWriter charArrayWriter1 = charArrayWriter0.append('R');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter1);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) charArrayWriter1;
      objectArray0[1] = (Object) mockPrintWriter0;
      objectArray0[2] = (Object) charArrayWriter0;
      objectArray0[3] = (Object) mockPrintWriter0;
      objectArray0[4] = (Object) "";
      objectArray0[5] = (Object) "";
      objectArray0[6] = (Object) "";
      objectArray0[7] = (Object) mockPrintWriter0;
      PrintWriter printWriter0 = mockPrintWriter0.printf("", objectArray0);
      FormatUtils.appendPaddedInteger((Appendable) printWriter0, 10, (-909));
      // Undeclared exception!
      try { 
        FormatUtils.parseTwoDigits(".,mp", (-678));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 100;
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(100);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0);
      Locale locale0 = Locale.GERMAN;
      String string0 = "";
      Object[] objectArray0 = new Object[0];
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "", objectArray0);
      FormatUtils.writeUnpaddedInteger((Writer) printWriter0, (long) 100);
      StringWriter stringWriter0 = new StringWriter();
      FormatUtils.writeUnpaddedInteger((Writer) stringWriter0, 100);
      StringBuffer stringBuffer0 = new StringBuffer("");
      // Undeclared exception!
      try { 
        stringBuffer0.insert(100, (double) 100);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 100
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FormatUtils.calculateDigitCount('-');
      char[] charArray0 = new char[4];
      charArray0[0] = '-';
      charArray0[1] = '-';
      charArray0[2] = '-';
      charArray0[3] = '-';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.get();
      CharBuffer.wrap(charArray0, 1, 2);
      CharBuffer charBuffer1 = charBuffer0.slice();
      // Undeclared exception!
      try { 
        FormatUtils.parseTwoDigits(charBuffer1, 1525);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Appendable appendable0 = null;
      int int0 = (-941);
      // Undeclared exception!
      try { 
        FormatUtils.appendPaddedInteger((Appendable) null, (-9223372036854775808L), (-941));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("");
      stringBuffer0.append("");
      FormatUtils.appendUnpaddedInteger((Appendable) stringBuffer0, (-134L));
      FormatUtils.appendPaddedInteger(stringBuffer0, (-134L), (-1240));
      MockFile mockFile0 = new MockFile("US,F4\"~(Pq3", "QBi~3fk5");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0);
      FormatUtils.writeUnpaddedInteger((Writer) mockFileWriter0, (-1240));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FormatUtils.calculateDigitCount((-9223372036854775808L));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Writer writer0 = null;
      int int0 = 1548;
      // Undeclared exception!
      try { 
        FormatUtils.writePaddedInteger((Writer) null, 1548, 1548);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = charBuffer0.duplicate();
      int int0 = (-2113929215);
      int int1 = 2431;
      // Undeclared exception!
      try { 
        FormatUtils.appendPaddedInteger((Appendable) charBuffer1, (-2113929215), 2431);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FormatUtils.calculateDigitCount((-37L));
      int int0 = (-3761);
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((-3761));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) "yyW";
      objectArray0[3] = (Object) "";
      FormatUtils.createErrorMessage("", 3252);
      StringBuffer stringBuffer0 = new StringBuffer("Invalid format: \"");
      stringBuffer0.trimToSize();
      FormatUtils.appendUnpaddedInteger((Appendable) stringBuffer0, (long) (-372));
      FormatUtils.appendPaddedInteger((Appendable) stringBuffer0, (-372), 45);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "8NMK^OfMu#>C)2");
      PipedInputStream pipedInputStream0 = new PipedInputStream(39);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      Charset charset0 = Charset.defaultCharset();
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(pipedOutputStream0, charset0);
      outputStreamWriter0.append('V');
      FormatUtils.writeUnpaddedInteger((Writer) outputStreamWriter0, (long) 39);
      FormatUtils.appendUnpaddedInteger((Appendable) outputStreamWriter0, (long) 39);
      FormatUtils.appendPaddedInteger((Appendable) outputStreamWriter0, (long) 39, 1487);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      FormatUtils.writePaddedInteger((Writer) charArrayWriter0, 1000L, 872);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, false);
      mockPrintWriter0.print((float) 872);
      FormatUtils.writePaddedInteger((Writer) mockPrintWriter0, 28, 3031);
      FormatUtils.calculateDigitCount(1L);
      FormatUtils.writePaddedInteger((Writer) charArrayWriter0, (long) 1, 3023);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("");
      StringBuffer stringBuffer1 = stringBuffer0.append(false);
      StringBuffer stringBuffer2 = stringBuffer1.appendCodePoint(0);
      StringBuffer stringBuffer3 = stringBuffer2.append(2);
      StringBuffer stringBuffer4 = stringBuffer3.reverse();
      FormatUtils.appendPaddedInteger(stringBuffer4, 2380L, 0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'w';
      charArray0[1] = 'g';
      charArray0[2] = '\"';
      charArray0[3] = 'c';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = charBuffer0.put('w');
      // Undeclared exception!
      try { 
        FormatUtils.parseTwoDigits(charBuffer1, (-2573));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("Q;^");
      PrintStream printStream0 = mockPrintStream0.append('*');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(printStream0);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) printStream0;
      objectArray0[1] = (Object) mockPrintWriter0;
      objectArray0[2] = (Object) printStream0;
      objectArray0[3] = (Object) printStream0;
      objectArray0[4] = (Object) mockPrintWriter0;
      mockPrintWriter0.println((Object) "");
      PrintWriter printWriter0 = mockPrintWriter0.printf("$0X*nQ#jB", objectArray0);
      int int0 = 1;
      FormatUtils.writePaddedInteger((Writer) printWriter0, 1, 45);
      FormatUtils.appendUnpaddedInteger((Appendable) mockPrintStream0, (long) 45);
      StringBuffer stringBuffer0 = new StringBuffer(1);
      StringBuffer stringBuffer1 = stringBuffer0.append((CharSequence) "Q;^");
      StringBuffer stringBuffer2 = stringBuffer1.append((double) 45);
      StringBuffer stringBuffer3 = stringBuffer2.insert(1, true);
      stringBuffer1.chars();
      // Undeclared exception!
      try { 
        stringBuffer3.delete(3826, 1);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(3);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      // Undeclared exception!
      try { 
        FormatUtils.appendPaddedInteger((Appendable) charBuffer0, 1375L, 3);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FormatUtils.calculateDigitCount(0L);
      FormatUtils.calculateDigitCount(2225L);
      CharBuffer.allocate(4);
      char[] charArray0 = new char[2];
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      FormatUtils.appendPaddedInteger(stringBuffer0, (-3826L), 0);
      FormatUtils.createErrorMessage("L -|llYq.W16IlJAl", 0);
      FormatUtils.appendUnpaddedInteger(stringBuffer0, (long) 4);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("");
      StringBuffer stringBuffer1 = stringBuffer0.append(false);
      StringBuffer stringBuffer2 = stringBuffer1.appendCodePoint(0);
      StringBuffer stringBuffer3 = stringBuffer2.append(2);
      stringBuffer2.insert(0, '9');
      StringBuffer stringBuffer4 = stringBuffer3.reverse();
      FormatUtils.appendPaddedInteger(stringBuffer4, 2380L, 0);
      // Undeclared exception!
      try { 
        FormatUtils.writeUnpaddedInteger((Writer) null, 32);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FormatUtils.createErrorMessage("h", (-7));
      // Undeclared exception!
      try { 
        FormatUtils.parseTwoDigits("h", (-1651));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FormatUtils.calculateDigitCount(100L);
      FormatUtils.calculateDigitCount(1L);
      String string0 = "}(jh6FE QP";
      StringBuffer stringBuffer0 = new StringBuffer("}(jh6FE QP");
      int int0 = (-1065);
      // Undeclared exception!
      try { 
        stringBuffer0.insert((-1065), 785L);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1065
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringBuffer stringBuffer0 = null;
      long long0 = 100L;
      // Undeclared exception!
      try { 
        FormatUtils.appendUnpaddedInteger((StringBuffer) null, 100L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.google.common.io.PatternFilenameFilter");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('h');
      StringBuffer stringBuffer0 = stringWriter1.getBuffer();
      StringBuffer stringBuffer1 = stringBuffer0.append(2087.2781793162);
      FormatUtils.appendPaddedInteger((Appendable) stringBuffer1, 624, 8);
      int int0 = 1;
      String string0 = "";
      String string1 = "kJ275> RmI{";
      try { 
        MockURI.URI("", "", "D]X.g7Q&qC`oBhqTEqI", 1, "", "D]X.g7Q&qC`oBhqTEqI", "kJ275> RmI{");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://@D]X.g7Q&qC`oBhqTEqI:1?D]X.g7Q&qC%60oBhqTEqI#kJ275%3E%20RmI%7B%7F
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      File file0 = MockFile.createTempFile(".ZU2@TpT", "", (File) mockFile0);
      MockFileWriter mockFileWriter0 = new MockFileWriter(file0);
      FormatUtils.writePaddedInteger((Writer) mockFileWriter0, 34, (-669));
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(34);
      char[] charArray0 = new char[0];
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(48);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(filterOutputStream0);
      FormatUtils.writeUnpaddedInteger((Writer) mockPrintWriter0, (long) 48);
      FormatUtils.writeUnpaddedInteger((Writer) mockPrintWriter0, 0);
      int int0 = 0;
      FormatUtils.writePaddedInteger((Writer) mockPrintWriter0, 0, 48);
      char[] charArray0 = new char[6];
      charArray0[0] = '&';
      charArray0[1] = '[';
      charArray0[2] = 'i';
      charArray0[3] = 'y';
      charArray0[4] = ']';
      charArray0[5] = 'O';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      // Undeclared exception!
      try { 
        charBuffer1.put(charArray0, 47, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      FormatUtils.writePaddedInteger((Writer) charArrayWriter0, 0, 0);
      FormatUtils.writePaddedInteger((Writer) charArrayWriter0, 100L, (-1353));
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        stringBuffer0.replace(48, 0, (String) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // start > length()
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FormatUtils.calculateDigitCount(0L);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(1);
      StringBuffer stringBuffer0 = new StringBuffer("A");
      charArrayWriter0.write("A");
      StringBuffer stringBuffer1 = stringBuffer0.insert(0, "6q<");
      CharArrayWriter charArrayWriter1 = charArrayWriter0.append((CharSequence) stringBuffer1);
      CharArrayWriter charArrayWriter2 = charArrayWriter1.append((CharSequence) stringBuffer1, 1, 1);
      charArrayWriter1.reset();
      charArrayWriter2.write("A", 0, 1);
      FormatUtils.writeUnpaddedInteger((Writer) charArrayWriter2, (-3962L));
      FormatUtils.appendUnpaddedInteger((Appendable) stringBuffer1, 189L);
      FormatUtils.writePaddedInteger((Writer) charArrayWriter2, 0, 1);
      FormatUtils.writeUnpaddedInteger((Writer) charArrayWriter1, 189L);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("#`gqaC1N");
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "#`gqaC1N";
      objectArray0[1] = (Object) mockPrintStream0;
      objectArray0[2] = (Object) "#`gqaC1N";
      PrintStream printStream0 = mockPrintStream0.format("t{@@DYT).D.$", objectArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(printStream0);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "#`gqaC1N");
      FormatUtils.writePaddedInteger((Writer) printWriter0, (-571), (-571));
      FormatUtils.appendPaddedInteger((Appendable) printWriter0, 0, (-2127));
      StringWriter stringWriter0 = new StringWriter(32);
      FormatUtils.writePaddedInteger((Writer) stringWriter0, 0L, 0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FormatUtils.calculateDigitCount(3504L);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      int int0 = 10;
      FormatUtils.writePaddedInteger((Writer) charArrayWriter0, 10, 4);
      CharBuffer charBuffer0 = CharBuffer.allocate(4);
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) charBuffer0, 10, 10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = 'W';
      charArray0[1] = '\'';
      charArray0[2] = 'S';
      charArray0[3] = 'c';
      charArray0[4] = '-';
      charArray0[5] = 'l';
      charArray0[6] = '6';
      charArray0[7] = 'v';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = charBuffer0.put('L');
      CharBuffer charBuffer2 = charBuffer1.append('L');
      CharBuffer charBuffer3 = CharBuffer.wrap((CharSequence) charBuffer2);
      // Undeclared exception!
      try { 
        FormatUtils.appendUnpaddedInteger((Appendable) charBuffer3, (-3743L));
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = 656;
      // Undeclared exception!
      try { 
        FormatUtils.appendUnpaddedInteger((Appendable) null, 656);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        FormatUtils.writePaddedInteger((Writer) null, (-1L), (-438));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int int0 = (-1655);
      int int1 = 2448;
      // Undeclared exception!
      try { 
        FormatUtils.appendPaddedInteger((Appendable) null, (-1655), 2448);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringBuffer stringBuffer0 = null;
      // Undeclared exception!
      try { 
        FormatUtils.appendUnpaddedInteger((StringBuffer) null, 10L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      charArrayWriter0.close();
      FormatUtils.writeUnpaddedInteger((Writer) charArrayWriter0, 1348);
      StringBuffer stringBuffer0 = new StringBuffer(1348);
      StringBuffer stringBuffer1 = stringBuffer0.append(false);
      int int0 = 670;
      // Undeclared exception!
      try { 
        stringBuffer1.deleteCharAt(670);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 670
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringBuffer stringBuffer0 = null;
      // Undeclared exception!
      try { 
        FormatUtils.appendUnpaddedInteger((StringBuffer) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Appendable appendable0 = null;
      int int0 = 0;
      // Undeclared exception!
      try { 
        FormatUtils.appendUnpaddedInteger((Appendable) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CharSequence charSequence0 = null;
      int int0 = 7;
      // Undeclared exception!
      try { 
        FormatUtils.parseTwoDigits((CharSequence) null, 7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StringBuffer stringBuffer0 = null;
      int int0 = 0;
      // Undeclared exception!
      try { 
        FormatUtils.appendPaddedInteger((StringBuffer) null, (-1L), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      // Undeclared exception!
      try { 
        FormatUtils.appendUnpaddedInteger((Appendable) null, 112L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Writer writer0 = null;
      int int0 = 0;
      // Undeclared exception!
      try { 
        FormatUtils.writeUnpaddedInteger((Writer) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FormatUtils.calculateDigitCount(2097L);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      stringBuffer0.codePoints();
      char[] charArray0 = new char[5];
      charArray0[0] = '>';
      charArray0[1] = '.';
      charArray0[2] = '_';
      stringBuffer0.trimToSize();
      charArray0[3] = '2';
      charArray0[4] = '\\';
      stringWriter0.write(charArray0);
      FormatUtils.writePaddedInteger((Writer) stringWriter0, 3, (-1857));
      FormatUtils.appendPaddedInteger((Appendable) stringWriter0, 0, 2845);
      FormatUtils.appendUnpaddedInteger(stringBuffer0, 1177);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StringBuffer stringBuffer0 = null;
      int int0 = (-209);
      // Undeclared exception!
      try { 
        FormatUtils.appendUnpaddedInteger((StringBuffer) null, (-209));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      // Undeclared exception!
      try { 
        FormatUtils.writeUnpaddedInteger((Writer) null, 1841L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Writer writer0 = null;
      int int0 = 0;
      int int1 = 45;
      // Undeclared exception!
      try { 
        FormatUtils.writePaddedInteger((Writer) null, 0, 45);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Writer writer0 = null;
      int int0 = 2072;
      // Undeclared exception!
      try { 
        FormatUtils.writeUnpaddedInteger((Writer) null, 2072);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      StringBuffer stringBuffer2 = stringBuffer1.appendCodePoint(0);
      FormatUtils.appendUnpaddedInteger(stringBuffer2, 414L);
      StringWriter stringWriter0 = new StringWriter(1998);
      FormatUtils.writePaddedInteger((Writer) stringWriter0, 0, 1998);
      StringBuffer stringBuffer3 = stringBuffer1.reverse();
      FormatUtils.appendUnpaddedInteger((Appendable) stringBuffer3, 1998);
      FormatUtils.appendPaddedInteger(stringBuffer0, 20, 10000);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FormatUtils.createErrorMessage("V7.T^qd6?}-?", 19);
      FormatUtils.createErrorMessage(")PH;9o", 1);
      char[] charArray0 = new char[3];
      charArray0[0] = 'Z';
      charArray0[1] = 'E';
      charArray0[2] = 'U';
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FormatUtils.createErrorMessage("9S.", 10000);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "Invalid format: \"9S.\" is too short");
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      FormatUtils.appendUnpaddedInteger((Appendable) stringBuffer0, (long) 10000);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("");
      FormatUtils.appendUnpaddedInteger((Appendable) stringBuffer0, (-134L));
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FormatUtils.createErrorMessage("h", 0);
      // Undeclared exception!
      try { 
        FormatUtils.parseTwoDigits("Invalid format: \"h\"", (-1651));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FormatUtils.createErrorMessage("", 2543);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FormatUtils.calculateDigitCount(692L);
      // Undeclared exception!
      try { 
        FormatUtils.appendPaddedInteger((Appendable) null, 692L, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(962);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      StringBuffer stringBuffer1 = stringBuffer0.append('6');
      StringBuffer stringBuffer2 = stringBuffer1.append(stringBuffer0);
      FormatUtils.appendPaddedInteger(stringBuffer2, 962, (-1359));
      FormatUtils.appendPaddedInteger((Appendable) stringBuffer0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        FormatUtils.createErrorMessage((String) null, 27);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      int int0 = (-303);
      // Undeclared exception!
      try { 
        FormatUtils.createErrorMessage("1()}M", (-303));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      // Undeclared exception!
      try { 
        FormatUtils.createErrorMessage("5G<?jn%~/(0)3", (-2186));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FormatUtils.calculateDigitCount(0L);
      int int0 = 0;
      StringWriter stringWriter0 = new StringWriter(0);
      stringWriter0.getBuffer();
      int int1 = 0;
      // Undeclared exception!
      try { 
        stringWriter0.write((String) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      int int0 = 0;
      // Undeclared exception!
      try { 
        FormatUtils.writePaddedInteger((Writer) null, 0L, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      StringBuffer stringBuffer0 = null;
      int int0 = 0;
      // Undeclared exception!
      try { 
        FormatUtils.appendPaddedInteger((StringBuffer) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FormatUtils.calculateDigitCount((-2450));
      StringBuffer stringBuffer0 = new StringBuffer("org.apache.oro.io.Perl5FilenameFilter");
      FormatUtils.appendPaddedInteger(stringBuffer0, (-2450), 1525);
      FormatUtils.calculateDigitCount(1L);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(3);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      FormatUtils.appendPaddedInteger((Appendable) charBuffer0, 0L, 3);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      // Undeclared exception!
      try { 
        FormatUtils.appendPaddedInteger((StringBuffer) null, 1075, 1075);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      MockFile mockFile0 = new MockFile("NqZQS#d6*sbAD`>R");
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", "", (File) mockFile0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "8NMK^OfMu#>C)2");
      PipedInputStream pipedInputStream0 = new PipedInputStream(39);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      Charset charset0 = Charset.defaultCharset();
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(pipedOutputStream0, charset0);
      outputStreamWriter0.append('V');
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FormatUtils.writeUnpaddedInteger((Writer) outputStreamWriter0, (long) 39);
      FormatUtils.appendUnpaddedInteger((Appendable) outputStreamWriter0, (long) 39);
      FormatUtils.appendPaddedInteger((Appendable) outputStreamWriter0, (long) 39, 1487);
      FormatUtils.writeUnpaddedInteger((Writer) outputStreamWriter0, (-2386L));
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      MockFile mockFile0 = new MockFile("@ihrnZ['+J1593Z}", "@ihrnZ['+J1593Z}");
      MockFile mockFile1 = new MockFile(mockFile0, "@ihrnZ['+J1593Z}");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile1);
      FormatUtils.writePaddedInteger((Writer) mockPrintWriter0, 1797, 131);
      StringBuffer stringBuffer0 = new StringBuffer(131);
      int int0 = 3433;
      // Undeclared exception!
      try { 
        stringBuffer0.insert(1824, (CharSequence) "@ihrnZ['+J1593Z}", 1797, 3433);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // dstOffset 1824
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      MockFile mockFile0 = new MockFile("yyW", "1 ^4,");
      File file0 = mockFile0.getParentFile();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      FormatUtils.writePaddedInteger((Writer) mockPrintWriter0, 45, 47);
      mockPrintWriter0.println(2507L);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) "yyW";
      objectArray0[1] = (Object) file0;
      objectArray0[2] = (Object) file0;
      objectArray0[3] = (Object) "";
      mockPrintWriter0.printf("", objectArray0);
      FormatUtils.createErrorMessage("", 3252);
      FormatUtils.writePaddedInteger((Writer) mockPrintWriter0, 1L, (-372));
      FormatUtils.writeUnpaddedInteger((Writer) mockPrintWriter0, (long) 47);
      FormatUtils.calculateDigitCount((-1098L));
      FormatUtils.writePaddedInteger((Writer) mockPrintWriter0, (long) 45, 3252);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      MockFile mockFile0 = new MockFile("yyW", "1 ^4,");
      File file0 = mockFile0.getParentFile();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      int int0 = 47;
      FormatUtils.writePaddedInteger((Writer) mockPrintWriter0, 45, 47);
      mockPrintWriter0.println(2507L);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) "yyW";
      objectArray0[1] = (Object) file0;
      objectArray0[2] = (Object) file0;
      objectArray0[3] = (Object) "";
      mockPrintWriter0.printf("", objectArray0);
      FormatUtils.createErrorMessage("", 3252);
      int int1 = (-372);
      FormatUtils.writePaddedInteger((Writer) mockPrintWriter0, 1L, (-372));
      FormatUtils.writeUnpaddedInteger((Writer) mockPrintWriter0, (long) 47);
      FormatUtils.calculateDigitCount((-1098L));
      FormatUtils.writePaddedInteger((Writer) mockPrintWriter0, (long) 45, 3252);
      StringBuffer stringBuffer0 = new StringBuffer(47);
      // Undeclared exception!
      try { 
        stringBuffer0.delete(1776, (-1414));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      stringBuffer0.trimToSize();
      FormatUtils.appendUnpaddedInteger((Appendable) stringBuffer0, (-134L));
      FormatUtils.appendPaddedInteger(stringBuffer0, (-134L), (-267));
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("");
      StringBuffer stringBuffer1 = stringBuffer0.append(false);
      StringBuffer stringBuffer2 = stringBuffer1.appendCodePoint(0);
      StringBuffer stringBuffer3 = stringBuffer2.append(2);
      StringBuffer stringBuffer4 = stringBuffer3.reverse();
      FormatUtils.appendPaddedInteger(stringBuffer4, 2380L, 0);
      FormatUtils.appendUnpaddedInteger((Appendable) stringBuffer3, (long) 0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(".tmp");
      FormatUtils.writePaddedInteger((Writer) mockPrintWriter0, (-690), 2);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      StringBuffer stringBuffer0 = null;
      // Undeclared exception!
      try { 
        FormatUtils.appendUnpaddedInteger((StringBuffer) null, (-1476L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      String string0 = "5G<?jn%~/(0)3";
      int int0 = (-1806);
      // Undeclared exception!
      try { 
        FormatUtils.createErrorMessage("5G<?jn%~/(0)3", (-1806));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FormatUtils.createErrorMessage("h", 0);
      FormatUtils.parseTwoDigits("Invalid format: \"h\"", 0);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      FormatUtils.appendUnpaddedInteger((Appendable) charArrayWriter0, 1414L);
      int int0 = 7;
      FormatUtils.writePaddedInteger((Writer) charArrayWriter0, 7, 7);
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = stringBuffer0.append((CharSequence) "h", 0, 0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'U';
      charArray0[1] = '^';
      charArray0[2] = 'i';
      charArray0[3] = '$';
      charArray0[4] = 't';
      charArray0[5] = 'T';
      charArray0[6] = 'Y';
      charArray0[7] = '<';
      // Undeclared exception!
      try { 
        stringBuffer1.insert((-4814), charArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4814
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }
}
