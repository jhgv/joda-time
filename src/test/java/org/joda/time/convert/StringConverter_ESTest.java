/*
 * This file was automatically generated by EvoSuite
 * Sun Jun 24 23:24:35 GMT 2018
 */

package org.joda.time.convert;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Chronology;
import org.joda.time.DateTimeZone;
import org.joda.time.ReadWritableInterval;
import org.joda.time.ReadWritablePeriod;
import org.joda.time.convert.StringConverter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StringConverter_ESTest extends StringConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringConverter stringConverter0 = StringConverter.INSTANCE;
      // Undeclared exception!
      try { 
        stringConverter0.getDurationMillis("P8riodType does not suppor. fields: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid format: \"P8riodType does not suppor. fields: \"
         //
         verifyException("org.joda.time.convert.StringConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringConverter stringConverter0 = StringConverter.INSTANCE;
      // Undeclared exception!
      try { 
        stringConverter0.getDurationMillis("54W;");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid format: \"54W;\"
         //
         verifyException("org.joda.time.convert.StringConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringConverter stringConverter0 = StringConverter.INSTANCE;
      Chronology chronology0 = stringConverter0.getChronology((Object) null, (DateTimeZone) null);
      // Undeclared exception!
      try { 
        stringConverter0.setInto((ReadWritablePeriod) null, (Object) "", chronology0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.convert.StringConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringConverter stringConverter0 = new StringConverter();
      Class<?> class0 = stringConverter0.getSupportedType();
      Chronology chronology0 = stringConverter0.getChronology((Object) null, (DateTimeZone) null);
      // Undeclared exception!
      try { 
        stringConverter0.setInto((ReadWritablePeriod) null, (Object) class0, chronology0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Class cannot be cast to java.lang.String
         //
         verifyException("org.joda.time.convert.StringConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringConverter stringConverter0 = new StringConverter();
      Chronology chronology0 = stringConverter0.getChronology((Object) null, (DateTimeZone) null);
      // Undeclared exception!
      try { 
        stringConverter0.setInto((ReadWritableInterval) null, (Object) null, chronology0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.convert.StringConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringConverter stringConverter0 = new StringConverter();
      Class<?> class0 = stringConverter0.getSupportedType();
      Chronology chronology0 = stringConverter0.getChronology((Object) null, (DateTimeZone) null);
      // Undeclared exception!
      try { 
        stringConverter0.setInto((ReadWritableInterval) null, (Object) class0, chronology0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Class cannot be cast to java.lang.String
         //
         verifyException("org.joda.time.convert.StringConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringConverter stringConverter0 = new StringConverter();
      Chronology chronology0 = stringConverter0.getChronology((Object) null, (DateTimeZone) null);
      // Undeclared exception!
      try { 
        stringConverter0.getInstantMillis((Object) null, chronology0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringConverter stringConverter0 = StringConverter.INSTANCE;
      // Undeclared exception!
      try { 
        stringConverter0.getInstantMillis("", (Chronology) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid format: \"\"
         //
         verifyException("org.joda.time.format.DateTimeParserBucket", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringConverter stringConverter0 = StringConverter.INSTANCE;
      // Undeclared exception!
      try { 
        stringConverter0.getDurationMillis((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.convert.StringConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringConverter stringConverter0 = new StringConverter();
      Class<?> class0 = stringConverter0.getSupportedType();
      // Undeclared exception!
      try { 
        stringConverter0.getDurationMillis(class0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Class cannot be cast to java.lang.String
         //
         verifyException("org.joda.time.convert.StringConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringConverter stringConverter0 = new StringConverter();
      // Undeclared exception!
      try { 
        stringConverter0.setInto((ReadWritableInterval) null, (Object) "!\"`ZnXg", (Chronology) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Format requires a '/' separator: !\"`ZnXg
         //
         verifyException("org.joda.time.convert.StringConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringConverter stringConverter0 = StringConverter.INSTANCE;
      // Undeclared exception!
      try { 
        stringConverter0.getDurationMillis("q2,1H");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid format: \"q2,1H\"
         //
         verifyException("org.joda.time.convert.StringConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringConverter stringConverter0 = new StringConverter();
      // Undeclared exception!
      try { 
        stringConverter0.getDurationMillis("PeriodType does not support fields: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid format: \"PeriodType does not support fields: \"
         //
         verifyException("org.joda.time.convert.StringConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringConverter stringConverter0 = new StringConverter();
      // Undeclared exception!
      try { 
        stringConverter0.getDurationMillis("CST");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid format: \"CST\"
         //
         verifyException("org.joda.time.convert.StringConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringConverter stringConverter0 = StringConverter.INSTANCE;
      Class<?> class0 = stringConverter0.getSupportedType();
      Chronology chronology0 = stringConverter0.getChronology((Object) "Format requires a '/' separator: ", (DateTimeZone) null);
      // Undeclared exception!
      try { 
        stringConverter0.getInstantMillis(class0, chronology0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Class cannot be cast to java.lang.String
         //
         verifyException("org.joda.time.convert.StringConverter", e);
      }
  }
}
