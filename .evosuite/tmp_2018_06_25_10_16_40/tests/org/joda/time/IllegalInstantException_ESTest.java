/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 25 13:46:44 GMT 2018
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.joda.time.IllegalInstantException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IllegalInstantException_ESTest extends IllegalInstantException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        IllegalInstantException.isIllegalInstant((Throwable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.IllegalInstantException", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable("");
      boolean boolean0 = IllegalInstantException.isIllegalInstant(mockThrowable0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IllegalInstantException illegalInstantException0 = new IllegalInstantException((-2214L), "I3DF@u:.BI<`U*&[Q");
      MockThrowable mockThrowable0 = new MockThrowable(illegalInstantException0);
      boolean boolean0 = IllegalInstantException.isIllegalInstant(mockThrowable0);
      assertEquals("org.evosuite.runtime.mock.java.lang.MockThrowable: Illegal instant due to time zone offset transition (daylight savings time 'gap'): 1969-12-31T23:59:57.786 (I3DF@u:.BI<`U*&[Q)", mockThrowable0.getMessage());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IllegalInstantException illegalInstantException0 = new IllegalInstantException("");
      boolean boolean0 = IllegalInstantException.isIllegalInstant(illegalInstantException0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IllegalInstantException illegalInstantException0 = new IllegalInstantException((-1L), (String) null);
  }
}
