/*
 * This file was automatically generated by EvoSuite
 * Sun Jun 24 23:47:08 GMT 2018
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeFieldType;
import org.joda.time.format.DateTimeFormatter;
import org.joda.time.format.DateTimeFormatterBuilder;
import org.joda.time.format.DateTimeParser;
import org.joda.time.format.DateTimeParserInternalParser;
import org.joda.time.format.InternalParser;
import org.joda.time.format.InternalParserDateTimeParser;
import org.joda.time.format.InternalPrinter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DateTimeParserInternalParser_ESTest extends DateTimeParserInternalParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.secondOfMinute();
      DateTimeFormatterBuilder.FixedNumber dateTimeFormatterBuilder_FixedNumber0 = new DateTimeFormatterBuilder.FixedNumber(dateTimeFieldType0, 0, false);
      DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_FixedNumber0, dateTimeFormatterBuilder_FixedNumber0);
      DateTimeParser dateTimeParser0 = dateTimeFormatter0.getParser();
      InternalParser internalParser0 = DateTimeParserInternalParser.of(dateTimeParser0);
      assertEquals(0, internalParser0.estimateParsedLength());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DateTimeFormatterBuilder.TimeZoneId dateTimeFormatterBuilder_TimeZoneId0 = DateTimeFormatterBuilder.TimeZoneId.INSTANCE;
      DateTimeParser dateTimeParser0 = InternalParserDateTimeParser.of(dateTimeFormatterBuilder_TimeZoneId0);
      InternalParser internalParser0 = DateTimeParserInternalParser.of(dateTimeParser0);
      assertEquals(32, internalParser0.estimateParsedLength());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfYear();
      DateTimeFormatterBuilder.Fraction dateTimeFormatterBuilder_Fraction0 = new DateTimeFormatterBuilder.Fraction(dateTimeFieldType0, (-1511), (-1511));
      DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter((InternalPrinter) null, dateTimeFormatterBuilder_Fraction0);
      DateTimeParser dateTimeParser0 = dateTimeFormatter0.getParser();
      InternalParser internalParser0 = DateTimeParserInternalParser.of(dateTimeParser0);
      assertSame(internalParser0, dateTimeParser0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      InternalParser internalParser0 = DateTimeParserInternalParser.of((DateTimeParser) null);
      assertNull(internalParser0);
  }
}
