/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 25 13:49:11 GMT 2018
 */

package org.joda.time.chrono;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Calendar;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.joda.time.Chronology;
import org.joda.time.DateTimeField;
import org.joda.time.DateTimeFieldType;
import org.joda.time.DateTimeZone;
import org.joda.time.LocalDate;
import org.joda.time.LocalDateTime;
import org.joda.time.LocalTime;
import org.joda.time.MonthDay;
import org.joda.time.ReadablePartial;
import org.joda.time.chrono.ISOYearOfEraDateTimeField;
import org.joda.time.chrono.IslamicChronology;
import org.joda.time.chrono.JulianChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ISOYearOfEraDateTimeField_ESTest extends ISOYearOfEraDateTimeField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.get((-9223372036854775808L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      // Undeclared exception!
      try { 
        iSOYearOfEraDateTimeField1.set((-9223372036854775808L), 292275055);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value -292275055 for year must be in the range [-292275054,292278993]
         //
         verifyException("org.joda.time.field.FieldUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      System.setCurrentTimeMillis(2L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      JulianChronology julianChronology0 = JulianChronology.getInstance();
      Integer.getInteger("~Qsw2");
      IslamicChronology islamicChronology0 = new IslamicChronology(julianChronology0, (Object) null, (IslamicChronology.LeapYearPatternType) null);
      LocalTime localTime0 = new LocalTime((-1L), (Chronology) islamicChronology0);
      int[] intArray0 = new int[10];
      intArray0[0] = 1;
      Integer.max(517, 1);
      int[] intArray1 = iSOYearOfEraDateTimeField0.addWrapField((ReadablePartial) localTime0, 1, intArray0, 1456);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.getDifferenceAsLong(517, (-1L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.getRangeDurationField();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.get(1);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.getDifferenceAsLong(0L, (-4462L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      // Undeclared exception!
      try { 
        iSOYearOfEraDateTimeField6.addWrapField((ReadablePartial) localTime0, 6530, intArray1, 100);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6530
         //
         verifyException("org.joda.time.field.BaseDateTimeField", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      MonthDay monthDay0 = new MonthDay();
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = (-1591);
      intArray0[3] = (-1);
      intArray0[4] = 1;
      intArray0[5] = 1;
      intArray0[6] = 1;
      intArray0[7] = 1;
      intArray0[8] = 1;
      iSOYearOfEraDateTimeField0.addWrapField((ReadablePartial) monthDay0, 1, intArray0, (-1));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.roundFloor((-1402L));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.get(292278993);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.getDifferenceAsLong(292278993, 0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.getMinimumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      int int0 = 91;
      iSOYearOfEraDateTimeField5.set(0L, 91);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField6.getDifferenceAsLong(0L, (-59295456000000L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField7 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      IslamicChronology islamicChronology0 = IslamicChronology.getInstance();
      LocalTime localTime0 = new LocalTime((Chronology) islamicChronology0);
      int int1 = 481;
      LocalTime localTime1 = localTime0.plusHours(481);
      int int2 = 1971;
      LocalTime localTime2 = localTime1.withMillisOfDay(1971);
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.yearOfEra();
      // Undeclared exception!
      try { 
        localTime2.withField(dateTimeFieldType0, 3600000);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Field 'yearOfEra' is not supported
         //
         verifyException("org.joda.time.LocalTime", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.add(0L, 0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.addWrapField((-79L), 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.roundCeiling((-79L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.getDifference((-79L), 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.add((long) 0, 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.getMinimumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField6.set((long) 0, 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField7 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField7.set(0L, 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField8 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField8.getRangeDurationField();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField9 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField9.get((-62167219200000L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField10 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField10.set(0L, 1195);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField11 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField11.addWrapField((-3933L), 1921);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField12 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField12.add(6000L, (-1L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField13 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField13.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField14 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField14.roundFloor(0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      LocalTime localTime0 = new LocalTime(0L);
      LocalTime localTime1 = localTime0.minusHours((-2872));
      int[] intArray0 = new int[8];
      intArray0[0] = 940;
      intArray0[1] = (-2872);
      iSOYearOfEraDateTimeField0.getDifference(583L, (-1L));
      intArray0[2] = (-2872);
      intArray0[3] = (-1494);
      intArray0[4] = (-2872);
      intArray0[5] = (-2872);
      intArray0[6] = (-2872);
      intArray0[7] = (-2872);
      iSOYearOfEraDateTimeField0.getMinimumValue((ReadablePartial) localTime1, intArray0);
      iSOYearOfEraDateTimeField0.remainder(4L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.getMinimumValue();
      iSOYearOfEraDateTimeField0.addWrapField(4L, 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.add(4L, 692);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.roundFloor(104767008L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.roundFloor(21837427200004L);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.roundFloor((-433L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.add((-31536000000L), (-433L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.getDifference((-13695782400000L), 331L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.getDifferenceAsLong((-13695782400000L), 0L);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.getDifference(3123L, 3123L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.getMinimumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.roundCeiling((-9223372036854775799L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.getRangeDurationField();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.roundCeiling((-9223372036854775799L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField6.getRangeDurationField();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField7 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      // Undeclared exception!
      try { 
        LocalDate.now((DateTimeZone) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Zone must not be null
         //
         verifyException("org.joda.time.LocalDate", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.roundFloor(0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.getDifferenceAsLong(0L, 3418L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.addWrapField(1420L, 11);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.roundCeiling(29L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.getDifference(347155201420L, 0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField6.getDifferenceAsLong(292278993, 0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField7 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField7.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField8 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField8.getDifference(1L, 0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField9 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField9.get(0L);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.remainder(0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.get(2219L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.set(0L, 1970);
      Calendar calendar0 = MockCalendar.getInstance();
      LocalDate localDate0 = LocalDate.fromCalendarFields(calendar0);
      int[] intArray0 = new int[9];
      intArray0[0] = 153692453;
      intArray0[1] = 329;
      intArray0[2] = 1970;
      intArray0[3] = 329;
      intArray0[4] = 1970;
      intArray0[5] = 329;
      intArray0[6] = 1970;
      intArray0[7] = 1970;
      intArray0[8] = 329;
      Locale locale0 = Locale.ITALIAN;
      // Undeclared exception!
      try { 
        iSOYearOfEraDateTimeField2.set((ReadablePartial) localDate0, 329, intArray0, "", locale0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value \"\" for yearOfEra is not supported
         //
         verifyException("org.joda.time.field.BaseDateTimeField", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      Locale locale0 = Locale.GERMANY;
      iSOYearOfEraDateTimeField1.getAsText(0, locale0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.addWrapField((-3982L), (-1691));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.getDifferenceAsLong((-2313L), (-1303L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.get((-1303L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.addWrapField(1273L, 1969);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.remainder(0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.addWrapField(0L, 0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.getDifferenceAsLong(1209600000L, 1209600000L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.getDifference(0L, 1209600000L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.getMaximumValue();
      iSOYearOfEraDateTimeField1.roundHalfCeiling(292278993);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.remainder(1209600000L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.isLeap(0);
      iSOYearOfEraDateTimeField4.set(1209600000L, 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.roundCeiling(0L);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.roundCeiling(0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.add(0L, 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.getRangeDurationField();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.getRangeDurationField();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.remainder(292278993);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField6.getDifference(0L, 8252640000L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField7 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField7.roundCeiling(0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField8 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField8.addWrapField((-999L), 356);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField9 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      int int0 = new Integer(356);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField10 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField10.roundFloor(2000L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField11 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField11.getRangeDurationField();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField12 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField12.getDifferenceAsLong((-696L), 11234246399001L);
      iSOYearOfEraDateTimeField7.getMaximumValue();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.getMinimumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.set((long) 0, 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.getDifferenceAsLong(1500L, (-1917L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.roundFloor(0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.add((-1332L), 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.set((-62167219200000L), 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField6.remainder(0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField7 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField7.roundCeiling(166L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField8 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField8.getDifference(2744L, 0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField9 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField9.roundCeiling(0L);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.remainder((-1L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.add(2240L, (-1773));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.roundCeiling(728L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.getDifferenceAsLong(0L, 728L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      // Undeclared exception!
      try { 
        iSOYearOfEraDateTimeField4.add(31536000000L, (-55950393597760L));
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Value cannot fit in an int: -55950393597760
         //
         verifyException("org.joda.time.field.FieldUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.add(0L, 0);
      iSOYearOfEraDateTimeField0.getDifferenceAsLong((-2251L), 0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.add(0L, (-2251L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.getRangeDurationField();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.getDifferenceAsLong((-666L), 0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.addWrapField(3443L, 4563);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.add(2005L, 4563);
      iSOYearOfEraDateTimeField0.roundFloor(0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField6.get(143994412803443L);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.getDifferenceAsLong(720L, 720L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.set(720L, 2342);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.getMinimumValue();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.get(0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.set((long) 1970, 2064);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.set((long) 2064, 1970);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.remainder(2966371201970L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.roundCeiling(0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.roundFloor(1970L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField6.get(1L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField7 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField7.getDifferenceAsLong(1970, 0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField8 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField8.add(0L, 1L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField9 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField9.getRangeDurationField();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField10 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      int[] intArray0 = new int[5];
      intArray0[0] = 2064;
      intArray0[1] = 1970;
      intArray0[2] = 1970;
      intArray0[3] = 1970;
      intArray0[4] = 2064;
      // Undeclared exception!
      try { 
        iSOYearOfEraDateTimeField10.addWrapField((ReadablePartial) null, 2064, intArray0, 2064);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2064
         //
         verifyException("org.joda.time.field.BaseDateTimeField", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.remainder((-1148L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.add((-1148L), 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.roundCeiling((-1468L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.getRangeDurationField();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.getDifference(31535998852L, 0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.get(1116L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField6.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField7 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField7.add(1L, (long) 1970);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.getDifferenceAsLong(57120L, 57120L);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      // Undeclared exception!
      try { 
        iSOYearOfEraDateTimeField0.add(2629746000L, 2629746000L);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Value cannot fit in an int: 2629746000
         //
         verifyException("org.joda.time.field.FieldUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.getRangeDurationField();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.get(3L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.getRangeDurationField();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.roundFloor(3L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.addWrapField((-1803L), (-1980));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField6.getRangeDurationField();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField7 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField7.getDifferenceAsLong((-62482752001803L), 1970);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField8 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField8.add((long) 292278993, (-1980));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField9 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      // Undeclared exception!
      try { 
        iSOYearOfEraDateTimeField9.add(0L, (long) 292278993);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value 292280963 for year must be in the range [-292275054,292278993]
         //
         verifyException("org.joda.time.field.FieldUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.getRangeDurationField();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.get(2120L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.remainder(2120L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.getRangeDurationField();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.getRangeDurationField();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField6.roundCeiling(292278993);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField7 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      // Undeclared exception!
      try { 
        iSOYearOfEraDateTimeField7.add(2120L, 292278993);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value 292280963 for year must be in the range [-292275054,292278993]
         //
         verifyException("org.joda.time.field.FieldUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.roundFloor(0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.addWrapField((-1537L), 51);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.roundCeiling((-1537L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.getMinimumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.roundFloor(0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.get((-180L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField6.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField7 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField7.add(0L, (-433));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField8 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField8.set((-1667L), 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField9 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField9.addWrapField((-1L), 28265625);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField10 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField10.addWrapField(501L, 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField11 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      // Undeclared exception!
      try { 
        iSOYearOfEraDateTimeField11.set(707L, (-1090));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value -1090 for yearOfEra must be in the range [0,292278993]
         //
         verifyException("org.joda.time.field.FieldUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.addWrapField(2767L, (-665));
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.get((-9223372036854775808L));
      iSOYearOfEraDateTimeField0.roundFloor((-9223372036854775808L));
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.remainder((-120L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.roundCeiling((-120L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      int int0 = 0;
      iSOYearOfEraDateTimeField2.add((-120L), 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.add((-120L), 0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.remainder((-120L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      // Undeclared exception!
      try { 
        iSOYearOfEraDateTimeField5.addWrapField((ReadablePartial) null, 0, intArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.field.BaseDateTimeField", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.get((-2985L));
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      int[] intArray0 = new int[3];
      intArray0[0] = 2004;
      intArray0[1] = 2004;
      intArray0[2] = 2004;
      // Undeclared exception!
      try { 
        iSOYearOfEraDateTimeField0.addWrapField((ReadablePartial) null, 2004, intArray0, (-1480));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2004
         //
         verifyException("org.joda.time.field.BaseDateTimeField", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.add(380L, 380L);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.remainder(1639L);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.roundCeiling(1L);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.add((-3931L), 0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.getDifference((-2851L), (-2851L));
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      long long0 = (-9223372036854775808L);
      iSOYearOfEraDateTimeField0.get((-9223372036854775808L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      // Undeclared exception!
      try { 
        iSOYearOfEraDateTimeField1.set((-9223372036854775808L), 292275055);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value -292275055 for year must be in the range [-292275054,292278993]
         //
         verifyException("org.joda.time.field.FieldUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.remainder((-120L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.roundCeiling((-120L));
      iSOYearOfEraDateTimeField1.toString();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.add((-120L), 0);
      iSOYearOfEraDateTimeField0.add((-120L), 0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.remainder((-120L));
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      // Undeclared exception!
      try { 
        iSOYearOfEraDateTimeField1.addWrapField((ReadablePartial) null, 0, intArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.field.BaseDateTimeField", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.getDifferenceAsLong(4079L, (-1L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.set((-1781L), 292278993);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.getDifference((-21L), 0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.addWrapField(1L, 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.getRangeDurationField();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.roundHalfEven((-1606L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField6.get((-1692L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField7 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField7.getMinimumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField8 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
  }
}
