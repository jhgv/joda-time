/*
 * This file was automatically generated by EvoSuite
 * Sun Jun 24 23:46:04 GMT 2018
 */

package org.joda.time.chrono;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.DateTimeField;
import org.joda.time.DateTimeZone;
import org.joda.time.ReadablePartial;
import org.joda.time.YearMonth;
import org.joda.time.chrono.ISOYearOfEraDateTimeField;
import org.joda.time.chrono.IslamicChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ISOYearOfEraDateTimeField_ESTest extends ISOYearOfEraDateTimeField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      YearMonth yearMonth0 = new YearMonth(0L);
      DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetHoursMinutes(1, 0);
      IslamicChronology islamicChronology0 = IslamicChronology.getInstance(dateTimeZone0);
      YearMonth yearMonth1 = yearMonth0.withChronologyRetainFields(islamicChronology0);
      YearMonth yearMonth2 = yearMonth1.minusYears(1);
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[5] = 438;
      intArray0[6] = 1;
      intArray0[7] = 1;
      iSOYearOfEraDateTimeField0.addWrapField((ReadablePartial) yearMonth2, 1, intArray0, 318857);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      int int0 = 0;
      iSOYearOfEraDateTimeField0.add(80L, 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.getRangeDurationField();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.addWrapField(0L, (-1299));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.roundCeiling((-40992480000000L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.getDifference((-37L), 0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 21;
      intArray0[2] = (-1299);
      intArray0[3] = (-1299);
      // Undeclared exception!
      try { 
        iSOYearOfEraDateTimeField5.addWrapField((ReadablePartial) null, (-1299), intArray0, 21);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1299
         //
         verifyException("org.joda.time.field.BaseDateTimeField", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.getMinimumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.get((-804L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.add(0L, 0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.get(312L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.set(0L, 1970);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.get((-804L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField6.getMinimumValue();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.roundCeiling(365L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.getDifference((-3131L), 365L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.roundFloor(31536000000L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField6.getDifferenceAsLong(365L, 292278993);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField7 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField7.getDifference(0L, 292278993);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField8 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField8.add((long) 292278993, 1443L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField9 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField9.roundCeiling(774L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField10 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField10.remainder(45536980278993L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField11 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField11.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField12 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField12.addWrapField(231L, 0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.roundCeiling((-1L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.roundFloor((-1L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.get((-4403L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.remainder(1499L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      // Undeclared exception!
      try { 
        iSOYearOfEraDateTimeField6.add((-31536000000L), 292278993);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value 292280962 for year must be in the range [-292275054,292278993]
         //
         verifyException("org.joda.time.field.FieldUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.roundCeiling(0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.set(10800000L, 1358);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.roundCeiling(0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.set(0L, 2283);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.add(3397L, 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.addWrapField(0L, 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.getDifferenceAsLong(0, (-1584L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.add((-2125L), 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.get(0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField6.getDifferenceAsLong((-1584L), 0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField7 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField7.roundFloor(0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField8 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField8.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField9 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField9.roundCeiling(292278993);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField10 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField10.get(0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField11 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField11.addWrapField(1L, 1614);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.addWrapField((-1227L), (-1));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.add((-1243L), (-1));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.addWrapField(0L, (-1));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.getDifference(0L, (-31536000000L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.addWrapField((long) 292278993, (-1));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField6.getDifference((-5365L), 0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField7 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField7.roundFloor(292278993);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField8 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField8.add(0L, 10L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField9 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField9.getDifference(10L, (-1243L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField10 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField10.getMinimumValue();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      // Undeclared exception!
      try { 
        iSOYearOfEraDateTimeField1.add((long) 292278993, (long) 292278993);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value 292280963 for year must be in the range [-292275054,292278993]
         //
         verifyException("org.joda.time.field.FieldUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.set((long) 292278993, 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.getMinimumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.roundFloor((-3L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.add(905L, (-2095L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.getMinimumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField6.set((-9223372036854775808L), 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField7 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField7.get((-2095L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField8 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField8.roundFloor((-3L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField9 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField9.add(1393L, 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField10 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField10.getMinimumValue();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.roundCeiling((-4190L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.roundCeiling(3416L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.add(0L, 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.roundFloor((-1L));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.add((-2781L), (-2781L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.roundCeiling((-1598L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.roundCeiling(626L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.getDifference((-87759849602781L), (-4568L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.addWrapField((-4568L), (-2811));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.getRangeDurationField();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField6.getMinimumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField7 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField7.roundCeiling((-1598L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField8 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField8.set((-2781L), 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField9 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField9.getDifference(0L, (-1L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField10 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField10.getMinimumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField11 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField11.remainder((-3331L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField12 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField12.get((-173L));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.add(1L, 1L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.roundCeiling(1L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      long long0 = (-1677L);
      iSOYearOfEraDateTimeField2.roundCeiling((-1677L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.getDifferenceAsLong((-1677L), 31536000000L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.remainder((-2004L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField6.getRangeDurationField();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField7 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField7.roundCeiling((-1677L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField8 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      // Undeclared exception!
      try { 
        iSOYearOfEraDateTimeField8.set((-1310L), (-1285));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value -1285 for yearOfEra must be in the range [0,292278993]
         //
         verifyException("org.joda.time.field.FieldUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.addWrapField(2495L, (-866));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.get((-27328406397505L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.add(2495L, (long) 1104);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.addWrapField((-27328406397505L), 785);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.getDifferenceAsLong(0L, 442L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.roundFloor((-27328406397505L));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.roundFloor((-900L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.getDifferenceAsLong(85L, (-31536000000L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.getDifferenceAsLong(86L, (-3423L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.get(0L);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.add(1699L, 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.roundCeiling((-4659L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.remainder(31556952000L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.getRangeDurationField();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.addWrapField(0L, 2723);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.getMinimumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField6.roundCeiling(1L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField7 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField7.roundFloor(0L);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.getDifference(2523L, 2523L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.getRangeDurationField();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.remainder(0);
      iSOYearOfEraDateTimeField2.set((-57L), 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.add(2031L, (-1523L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.roundCeiling((-57L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField6.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField7 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField7.remainder((-57L));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      int int0 = 0;
      iSOYearOfEraDateTimeField0.addWrapField(0L, 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.roundFloor(0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.getRangeDurationField();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = (-4426);
      intArray0[3] = 0;
      intArray0[4] = 0;
      // Undeclared exception!
      try { 
        iSOYearOfEraDateTimeField3.addWrapField((ReadablePartial) null, 0, intArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.field.BaseDateTimeField", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.addWrapField(15778476000L, 341);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.set(15778476000L, 341);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      int int0 = (-1309);
      iSOYearOfEraDateTimeField3.add((-51390493524000L), (-1309));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.roundCeiling(341);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.roundCeiling((-92698506324000L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField6.get((-92698506324000L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField7 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField7.add((long) (-1309), 341);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField8 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      // Undeclared exception!
      try { 
        iSOYearOfEraDateTimeField8.add(0L, (-92698506324000L));
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Value cannot fit in an int: -92698506324000
         //
         verifyException("org.joda.time.field.FieldUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.getMinimumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.remainder(0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.roundFloor(0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.remainder(0L);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.getMinimumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.add((-9223372036854775808L), 3446L);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.roundCeiling(43200000L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.set(43200000L, 0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.getDifferenceAsLong(2401L, 86399999L);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.get(3262L);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.getDifference(1L, 0L);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      long long0 = (-2108L);
      // Undeclared exception!
      try { 
        iSOYearOfEraDateTimeField0.set((-2108L), (-1842));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value -1842 for yearOfEra must be in the range [0,292278993]
         //
         verifyException("org.joda.time.field.FieldUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.remainder(0L);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.roundFloor(0L);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.roundCeiling(1809L);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.getMinimumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.getMinimumValue();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.getDifferenceAsLong(0L, 0L);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.get((-841L));
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      int int0 = 0;
      iSOYearOfEraDateTimeField0.add(80L, 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.getRangeDurationField();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.addWrapField(0L, (-1299));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.set(10L, 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.getDifference(0L, 0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = (-1299);
      intArray0[3] = (-1299);
      // Undeclared exception!
      try { 
        iSOYearOfEraDateTimeField5.addWrapField((ReadablePartial) null, (-1299), intArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1299
         //
         verifyException("org.joda.time.field.BaseDateTimeField", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.getDifferenceAsLong(292278993, (-1L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.addWrapField(0L, 1);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.addWrapField(0L, 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.getDifference(292278993, 0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.set(0L, 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField6.getDifferenceAsLong(0L, 0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField7 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField7.getDifference(292278993, 0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField8 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField8.addWrapField((long) 292278993, 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField9 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField9.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField10 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField10.getDifferenceAsLong((-4282L), 0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField11 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField11.getDifference((-4282L), 1612L);
      iSOYearOfEraDateTimeField9.set((-42521587200000L), 0);
      iSOYearOfEraDateTimeField6.getRangeDurationField();
      System.setCurrentTimeMillis(0);
      iSOYearOfEraDateTimeField0.getMaximumValue();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.getDifference(1228L, 1228L);
      iSOYearOfEraDateTimeField0.addWrapField(0L, 0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.remainder(0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField2 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField2.addWrapField(0L, 0);
      iSOYearOfEraDateTimeField1.roundCeiling(0);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField3 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField3.add((-3177L), 1228L);
      iSOYearOfEraDateTimeField3.get(0L);
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField4 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField4.add(2211L, (-3122L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField5 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField5.getDifferenceAsLong(1000L, (-3177L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField6 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField6.getDifferenceAsLong(31083597720000L, (-1661L));
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField7 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField7.getRangeDurationField();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField8 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField8.get(0L);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField0.roundCeiling(43200000L);
      iSOYearOfEraDateTimeField0.getMaximumValue();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField1 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      iSOYearOfEraDateTimeField1.set(43200000L, 0);
      iSOYearOfEraDateTimeField0.get((-62167176000000L));
      iSOYearOfEraDateTimeField0.getMaximumValue();
      iSOYearOfEraDateTimeField1.getMinimumValue();
  }
}
