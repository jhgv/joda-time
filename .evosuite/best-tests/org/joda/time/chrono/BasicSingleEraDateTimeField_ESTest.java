/*
 * This file was automatically generated by EvoSuite
 * Sun Jun 24 23:46:10 GMT 2018
 */

package org.joda.time.chrono;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.chrono.BasicSingleEraDateTimeField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BasicSingleEraDateTimeField_ESTest extends BasicSingleEraDateTimeField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField("0{P2bId3]");
      Locale locale0 = Locale.CHINA;
      basicSingleEraDateTimeField0.set((-46L), "0{P2bId3]", locale0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField("1ckh+03U*pXB5N");
      basicSingleEraDateTimeField0.set(0L, 1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField("Yt|>3~4:ly/}");
      basicSingleEraDateTimeField0.set(67L, 1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField("");
      Locale locale0 = new Locale("", "org.joda.time.chrono.BasicSingleEraDateTimeField");
      basicSingleEraDateTimeField0.getMaximumTextLength(locale0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField((String) null);
      Locale locale0 = Locale.ITALY;
      basicSingleEraDateTimeField0.getAsText((-1067), locale0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField("");
      Locale locale0 = Locale.JAPANESE;
      basicSingleEraDateTimeField0.getAsText(1, locale0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField((String) null);
      Locale locale0 = Locale.GERMAN;
      // Undeclared exception!
      try { 
        basicSingleEraDateTimeField0.set((-271L), (String) null, locale0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField("");
      // Undeclared exception!
      try { 
        basicSingleEraDateTimeField0.set(0L, 3040);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value 3040 for era must be in the range [1,1]
         //
         verifyException("org.joda.time.field.FieldUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField((String) null);
      // Undeclared exception!
      try { 
        basicSingleEraDateTimeField0.getMaximumTextLength((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.chrono.BasicSingleEraDateTimeField", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField("eAH'f[?u");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      basicSingleEraDateTimeField0.getAsText(1, locale0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField("_gs>eFBFZl");
      basicSingleEraDateTimeField0.roundFloor((-3L));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField("1ckh+03U*pXB5N");
      basicSingleEraDateTimeField0.get((-9223372036854775808L));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField("1ckh+03U*pXB5N");
      basicSingleEraDateTimeField0.getMaximumValue();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField("jz");
      Locale locale0 = Locale.KOREAN;
      // Undeclared exception!
      try { 
        basicSingleEraDateTimeField0.set((-2012L), "s})B`bhE", locale0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value \"s})B`bhE\" for era is not supported
         //
         verifyException("org.joda.time.chrono.BasicSingleEraDateTimeField", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField("&-O");
      Locale locale0 = new Locale("%}7M 9\"6}Z 1}<u", "dnix9iIwJy3kU'");
      basicSingleEraDateTimeField0.set((long) 1, "1", locale0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField("y$XqV>(");
      Locale locale0 = Locale.CHINESE;
      basicSingleEraDateTimeField0.set(0L, "y$XqV>(", locale0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField("jz");
      basicSingleEraDateTimeField0.set((-2087L), 1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField("eAH'f[?u");
      basicSingleEraDateTimeField0.roundHalfCeiling(2897L);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField("y$XqV>(");
      basicSingleEraDateTimeField0.getMinimumValue();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField("eAH'f[?u");
      basicSingleEraDateTimeField0.roundHalfEven((-4309L));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField("&-O");
      basicSingleEraDateTimeField0.getRangeDurationField();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField("eAH'f[?u");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      basicSingleEraDateTimeField0.getMaximumTextLength(locale0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField("&-O");
      basicSingleEraDateTimeField0.roundCeiling(811L);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField("&-O");
      basicSingleEraDateTimeField0.roundHalfFloor(811L);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField("&-O");
      basicSingleEraDateTimeField0.getDurationField();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BasicSingleEraDateTimeField basicSingleEraDateTimeField0 = new BasicSingleEraDateTimeField("&-O");
      basicSingleEraDateTimeField0.isLenient();
  }
}
