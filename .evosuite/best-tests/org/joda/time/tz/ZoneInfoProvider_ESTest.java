/*
 * This file was automatically generated by EvoSuite
 * Sun Jun 24 23:33:06 GMT 2018
 */

package org.joda.time.tz;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.DateTimeZone;
import org.joda.time.tz.ZoneInfoProvider;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ZoneInfoProvider_ESTest extends ZoneInfoProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ZoneInfoProvider zoneInfoProvider0 = new ZoneInfoProvider();
      zoneInfoProvider0.getZone(":");
      DateTimeZone dateTimeZone0 = zoneInfoProvider0.getZone("=cxJ'T)3c\"qg?");
      assertNull(dateTimeZone0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ZoneInfoProvider zoneInfoProvider0 = new ZoneInfoProvider();
      zoneInfoProvider0.getZone("");
      zoneInfoProvider0.getAvailableIDs();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ZoneInfoProvider zoneInfoProvider0 = null;
      try {
        zoneInfoProvider0 = new ZoneInfoProvider("DBL'b(iq2kUp8jaW//");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Resource not found: \"DBL'b(iq2kUp8jaW//ZoneInfoMap\" ClassLoader: org.evosuite.instrumentation.InstrumentingClassLoader@0000000002
         //
         verifyException("org.joda.time.tz.ZoneInfoProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = null;
      ZoneInfoProvider zoneInfoProvider0 = null;
      try {
        zoneInfoProvider0 = new ZoneInfoProvider((String) null, (ClassLoader) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No resource path provided
         //
         verifyException("org.joda.time.tz.ZoneInfoProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ZoneInfoProvider zoneInfoProvider0 = null;
      try {
        zoneInfoProvider0 = new ZoneInfoProvider((File) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No file directory provided
         //
         verifyException("org.joda.time.tz.ZoneInfoProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ZoneInfoProvider zoneInfoProvider0 = new ZoneInfoProvider();
      String string0 = "<|kj!}f<cJ]*k";
      Exception exception0 = null;
      // Undeclared exception!
      try { 
        zoneInfoProvider0.uncaughtException((Exception) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.tz.ZoneInfoProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = null;
      ZoneInfoProvider zoneInfoProvider0 = null;
      try {
        zoneInfoProvider0 = new ZoneInfoProvider((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No resource path provided
         //
         verifyException("org.joda.time.tz.ZoneInfoProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "org.joda.time.DateTimeZone.Provider";
      ZoneInfoProvider zoneInfoProvider0 = null;
      try {
        zoneInfoProvider0 = new ZoneInfoProvider("org.joda.time.DateTimeZone.Provider", (ClassLoader) null);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Resource not found: \"org.joda.time.DateTimeZone.Provider/ZoneInfoMap\" ClassLoader: system
         //
         verifyException("org.joda.time.tz.ZoneInfoProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "File doesn't refer to a directory: ";
      ZoneInfoProvider zoneInfoProvider0 = null;
      try {
        zoneInfoProvider0 = new ZoneInfoProvider("File doesn't refer to a directory: ");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Resource not found: \"File doesn't refer to a directory: /ZoneInfoMap\" ClassLoader: org.evosuite.instrumentation.InstrumentingClassLoader@0000000002
         //
         verifyException("org.joda.time.tz.ZoneInfoProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ZoneInfoProvider zoneInfoProvider0 = null;
      try {
        zoneInfoProvider0 = new ZoneInfoProvider((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No resource path provided
         //
         verifyException("org.joda.time.tz.ZoneInfoProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ZoneInfoProvider zoneInfoProvider0 = null;
      try {
        zoneInfoProvider0 = new ZoneInfoProvider("Chronology must not be null");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Resource not found: \"Chronology must not be null/ZoneInfoMap\" ClassLoader: org.evosuite.instrumentation.InstrumentingClassLoader@0000000002
         //
         verifyException("org.joda.time.tz.ZoneInfoProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "GMT_-";
      ZoneInfoProvider zoneInfoProvider0 = null;
      try {
        zoneInfoProvider0 = new ZoneInfoProvider("GMT_-");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Resource not found: \"GMT_-/ZoneInfoMap\" ClassLoader: org.evosuite.instrumentation.InstrumentingClassLoader@0000000002
         //
         verifyException("org.joda.time.tz.ZoneInfoProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ZoneInfoProvider zoneInfoProvider0 = new ZoneInfoProvider();
      zoneInfoProvider0.getZone("org.joda,$ime.DateTimeZone");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ZoneInfoProvider zoneInfoProvider0 = null;
      try {
        zoneInfoProvider0 = new ZoneInfoProvider("", (ClassLoader) null);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Resource not found: \"/ZoneInfoMap\" ClassLoader: system
         //
         verifyException("org.joda.time.tz.ZoneInfoProvider", e);
      }
  }
}
